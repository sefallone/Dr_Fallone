import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Comparativo VITHAS-OSA 2026", layout="wide", page_icon="üè•")

# T√≠tulo
st.title("üè• Dashboard Comparativo VITHAS vs OSA 2026")
st.markdown("### An√°lisis de Facturaci√≥n y Procedimientos")

# Carga de archivo
uploaded_file = st.file_uploader("Sube tu archivo 'Proyeccion 3.xlsx'", type="xlsx")

if uploaded_file:
    try:
        # 1. Leer datos
        df = pd.read_excel(uploaded_file, sheet_name="Proyeccion 2026")
        
        # Limpieza de datos
        df['Fecha'] = pd.to_datetime(df['Fecha']).dt.date
        numeric_cols = df.select_dtypes(include=['number']).columns
        for col in numeric_cols:
            df[col] = pd.to_numeric(df[col], errors='coerce')
        
        # C√°lculo de totales por entidad
        df['Total VITHAS'] = df['Facturaci√≥n CCEE VITHAS'] + df['Facturaci√≥n Quir√∫rgico VITHAS'] + df['Facturaci√≥n Urgencias VITHAS']
        df['Total OSA'] = df['Facturaci√≥n CCEE OSA (80%)'] + df['Facturaci√≥n Quir√∫rgico OSA (90%)'] + df['Facturaci√≥n Urgencias OSA (50%)']
        df['Diferencia'] = df['Total VITHAS'] - df['Total OSA']
        
        # Totales anuales
        total_vithas = df['Total VITHAS'].sum()
        total_osa = df['Total OSA'].sum()
        diferencia_total = total_vithas - total_osa
        proporcion = (total_vithas / total_osa) if total_osa != 0 else 0
        
        # ==============================================
        # SECCI√ìN DE KPIs COMPARATIVOS
        # ==============================================
        st.markdown("---")
        st.header("üìä KPIs Comparativos VITHAS vs OSA")
        
        # Fila 1 - Totales
        col1, col2, col3 = st.columns(3)
        with col1:
            st.metric("1. Facturaci√≥n Total VITHAS", f"‚Ç¨{total_vithas/1000:,.1f}K", 
                     help="Suma de CCEE + Quir√∫rgico + Urgencias VITHAS")
        with col2:
            st.metric("2. Facturaci√≥n Total OSA", f"‚Ç¨{total_osa/1000:,.1f}K", 
                     help="Suma de CCEE (80%) + Quir√∫rgico (90%) + Urgencias (50%) OSA")
        with col3:
            st.metric("3. Diferencia Total", f"‚Ç¨{diferencia_total/1000:,.1f}K", 
                     delta=f"{proporcion-1:.1%}" if proporcion != 0 else None,
                     delta_color="inverse" if diferencia_total < 0 else "normal")
        
        # Fila 2 - Por categor√≠a
        col4, col5, col6 = st.columns(3)
        with col4:
            ccee_vithas = df['Facturaci√≥n CCEE VITHAS'].sum()
            ccee_osa = df['Facturaci√≥n CCEE OSA (80%)'].sum()
            st.metric("4. Consultas Externas", 
                     f"VITHAS: ‚Ç¨{ccee_vithas/1000:,.1f}K | OSA: ‚Ç¨{ccee_osa/1000:,.1f}K",
                     delta=f"{(ccee_vithas/ccee_osa-1):.1%}" if ccee_osa != 0 else None)
        with col5:
            quir_vithas = df['Facturaci√≥n Quir√∫rgico VITHAS'].sum()
            quir_osa = df['Facturaci√≥n Quir√∫rgico OSA (90%)'].sum()
            st.metric("5. Quir√∫rgico", 
                     f"VITHAS: ‚Ç¨{quir_vithas/1000:,.1f}K | OSA: ‚Ç¨{quir_osa/1000:,.1f}K",
                     delta=f"{(quir_vithas/quir_osa-1):.1%}" if quir_osa != 0 else None)
        with col6:
            urg_vithas = df['Facturaci√≥n Urgencias VITHAS'].sum()
            urg_osa = df['Facturaci√≥n Urgencias OSA (50%)'].sum()
            st.metric("6. Urgencias", 
                     f"VITHAS: ‚Ç¨{urg_vithas/1000:,.1f}K | OSA: ‚Ç¨{urg_osa/1000:,.1f}K",
                     delta=f"{(urg_vithas/urg_osa-1):.1%}" if urg_osa != 0 else None)
        
        # ==============================================
        # SECCI√ìN DE GR√ÅFICOS COMPARATIVOS
        # ==============================================
        st.markdown("---")
        st.header("üìà An√°lisis Visual Comparativo")
        
        # Gr√°fico 1: Comparaci√≥n mensual total
        fig1 = go.Figure()
        fig1.add_trace(go.Bar(x=df['Fecha'], y=df['Total VITHAS'], name='VITHAS'))
        fig1.add_trace(go.Bar(x=df['Fecha'], y=df['Total OSA'], name='OSA'))
        fig1.add_trace(go.Scatter(x=df['Fecha'], y=df['Diferencia'], name='Diferencia', 
                                mode='lines+markers', line=dict(color='red')))
        fig1.update_layout(barmode='group', title='1. Comparaci√≥n Mensual VITHAS vs OSA',
                         yaxis_title='Facturaci√≥n (‚Ç¨)')
        st.plotly_chart(fig1, use_container_width=True)
        
        # Gr√°fico 2: Composici√≥n por entidad
        fig2 = px.sunburst(
            pd.DataFrame({
                'Entidad': ['VITHAS', 'VITHAS', 'VITHAS', 'OSA', 'OSA', 'OSA'],
                'Categor√≠a': ['Consultas', 'Quir√∫rgico', 'Urgencias']*2,
                'Valor': [ccee_vithas, quir_vithas, urg_vithas, ccee_osa, quir_osa, urg_osa]
            }),
            path=['Entidad', 'Categor√≠a'],
            values='Valor',
            title='2. Composici√≥n de Facturaci√≥n por Entidad'
        )
        st.plotly_chart(fig2, use_container_width=True)
        
        # Gr√°fico 3: Evoluci√≥n de la diferencia
        fig3 = px.area(df, x='Fecha', y='Diferencia',
                      title="3. Evoluci√≥n de la Diferencia (VITHAS - OSA)",
                      labels={'Diferencia': 'Diferencia (‚Ç¨)'})
        fig3.add_hline(y=0, line_dash="dash", line_color="red")
        st.plotly_chart(fig3, use_container_width=True)
        
        # Gr√°fico 4: Porcentaje por categor√≠a
        fig4 = go.Figure()
        fig4.add_trace(go.Bar(
            x=['Consultas', 'Quir√∫rgico', 'Urgencias'],
            y=[ccee_vithas/ccee_osa*100 if ccee_osa !=0 else 0, 
               quir_vithas/quir_osa*100 if quir_osa !=0 else 0, 
               urg_vithas/urg_osa*100 if urg_osa !=0 else 0],
            name='VITHAS como % de OSA'
        ))
        fig4.update_layout(
            title='4. VITHAS como Porcentaje de OSA por Categor√≠a',
            yaxis_title='Porcentaje (%)',
            annotations=[
                dict(x=xi, y=yi+5, text=f"{yi:.1f}%", showarrow=False)
                for xi, yi in zip(['Consultas', 'Quir√∫rgico', 'Urgencias'],
                                [ccee_vithas/ccee_osa*100 if ccee_osa !=0 else 0, 
                                 quir_vithas/quir_osa*100 if quir_osa !=0 else 0, 
                                 urg_vithas/urg_osa*100 if urg_osa !=0 else 0])
            ]
        )
        st.plotly_chart(fig4, use_container_width=True)
        
        # ==============================================
        # TABLA RESUMEN COMPARATIVO
        # ==============================================
        st.markdown("---")
        st.header("üìã Resumen Comparativo Anual")
        
        summary_df = pd.DataFrame({
            'Categor√≠a': ['Consultas Externas', 'Quir√∫rgico', 'Urgencias', 'TOTAL'],
            'VITHAS (‚Ç¨)': [ccee_vithas, quir_vithas, urg_vithas, total_vithas],
            'OSA (‚Ç¨)': [ccee_osa, quir_osa, urg_osa, total_osa],
            'Diferencia (‚Ç¨)': [ccee_vithas-ccee_osa, quir_vithas-quir_osa, urg_vithas-urg_osa, diferencia_total],
            'VITHAS/OSA': [f"{ccee_vithas/ccee_osa:.1%}" if ccee_osa !=0 else 'N/A',
                          f"{quir_vithas/quir_osa:.1%}" if quir_osa !=0 else 'N/A',
                          f"{urg_vithas/urg_osa:.1%}" if urg_osa !=0 else 'N/A',
                          f"{proporcion:.1%}" if proporcion !=0 else 'N/A']
        })
        
        # Formatear n√∫meros
        for col in ['VITHAS (‚Ç¨)', 'OSA (‚Ç¨)', 'Diferencia (‚Ç¨)']:
            summary_df[col] = summary_df[col].apply(lambda x: f"‚Ç¨{x:,.0f}")
        
        st.dataframe(summary_df, hide_index=True, use_container_width=True)
        
        # ==============================================
        # AN√ÅLISIS COMPARATIVO
        # ==============================================
        st.markdown("---")
        st.header("üìå Conclusiones Clave")
        
        with st.expander("üîé Ver an√°lisis detallado", expanded=True):
            st.write(f"""
            **1. Balance Total:**
            - VITHAS factura ‚Ç¨{total_vithas/1000:,.1f}K vs ‚Ç¨{total_osa/1000:,.1f}K de OSA
            - Diferencia a favor de VITHAS: ‚Ç¨{diferencia_total/1000:,.1f}K ({proporcion:.1%} del total OSA)
            
            **2. Por Categor√≠a:**
            - **Consultas:** VITHAS ({ccee_vithas/1000:,.1f}K) vs OSA ({ccee_osa/1000:,.1f}K) | Relaci√≥n 80% esperada
            - **Quir√∫rgico:** VITHAS ({quir_vithas/1000:,.1f}K) vs OSA ({quir_osa/1000:,.1f}K) | Relaci√≥n 90% esperada
            - **Urgencias:** VITHAS ({urg_vithas/1000:,.1f}K) vs OSA ({urg_osa/1000:,.1f}K) | Relaci√≥n 50% esperada
            
            **3. Tendencia Mensual:**
            - La diferencia es m√°s pronunciada en {df.loc[df['Diferencia'].idxmax(), 'Fecha'].strftime('%B')} (‚Ç¨{df['Diferencia'].max()/1000:,.1f}K)
            - Menor diferencia en {df.loc[df['Diferencia'].idxmin(), 'Fecha'].strftime('%B')} (‚Ç¨{df['Diferencia'].min()/1000:,.1f}K)
            """)
    
    except Exception as e:
        st.error(f"‚ùå Error al procesar el archivo: {str(e)}")
        st.write("‚ÑπÔ∏è Posibles soluciones:")
        st.write("- Verifica que el archivo tenga la hoja 'Proyeccion 2026'")
        st.write("- Aseg√∫rate de que las f√≥rmulas de Excel se hayan calculado")
        st.write("- Revisa que no haya celdas con errores en los datos num√©ricos")

else:
    st.info("‚ÑπÔ∏è Por favor, sube el archivo 'Proyeccion 3.xlsx' para comenzar el an√°lisis.")
