import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Escalabilidad", layout="wide", page_icon="üìä")

st.markdown("## üìä Escalabilidad del Sistema de Pago")
st.write("""
El sistema de pago funciona en **tres pasos muy simples**:

1. Cada m√©dico genera una **facturaci√≥n bruta total** (lo que entra por consultas, cirug√≠as, urgencias, etc.).
2. Esa facturaci√≥n se reparte autom√°ticamente entre **VITHAS** y **OSA**, seg√∫n los porcentajes definidos para cada servicio.
3. Del pool OSA, se calcula cu√°nto se le abona al m√©dico seg√∫n su nivel (**Especialista o Consultor**) y su posici√≥n respecto al promedio del grupo.
""")

# -------------------- Cargar DataFrame --------------------
if "df_edit" not in st.session_state:
    st.error("‚ùå No se han cargado datos a√∫n. Por favor, primero use la p√°gina 'Distribuci√≥n VITHAS-OSA'.")
    st.stop()

df_edit = st.session_state["df_edit"].copy()
servicios = st.session_state["servicios"]

# -------------------- Selecci√≥n de m√©dicos --------------------
st.markdown("### üë®‚Äç‚öïÔ∏è Seleccione m√©dicos para ver el detalle")
medicos_sel = st.multiselect(
    "M√©dicos:",
    df_edit["M√©dico"].unique(),
    default=[df_edit["M√©dico"].iloc[0]]
)

if not medicos_sel:
    st.warning("‚ö†Ô∏è Selecciona al menos un m√©dico para mostrar datos.")
    st.stop()

# -------------------- Construcci√≥n de datos --------------------
comparacion_data = []

for medico_sel in medicos_sel:
    row = df_edit[df_edit["M√©dico"] == medico_sel].iloc[0]

    for s in servicios.keys():
        fact = row[s]
        vithas = fact * servicios[s]["VITHAS"]
        osa = fact * servicios[s]["OSA"]
        abonado = osa * row["Pct_Abono"]
        comparacion_data.append({
            "M√©dico": medico_sel,
            "Servicio": s,
            "Facturaci√≥n": fact,
            "VITHAS": vithas,
            "OSA": osa,
            "Abonado al M√©dico": abonado
        })

df_comp = pd.DataFrame(comparacion_data)

# -------------------- Mostrar detalle por m√©dico --------------------
st.markdown("### üìã Detalle por M√©dico")
for medico_sel in medicos_sel:
    df_medico = df_comp[df_comp["M√©dico"] == medico_sel].copy()
    df_medico.loc["TOTAL"] = df_medico[["Facturaci√≥n", "VITHAS", "OSA", "Abonado al M√©dico"]].sum()
    df_medico.loc["TOTAL", "M√©dico"] = medico_sel
    df_medico.loc["TOTAL", "Servicio"] = "TOTAL"

    st.subheader(f"üë®‚Äç‚öïÔ∏è {medico_sel}")
    st.dataframe(
        df_medico.style.format({
            "Facturaci√≥n": "{:,.2f} ‚Ç¨",
            "VITHAS": "{:,.2f} ‚Ç¨",
            "OSA": "{:,.2f} ‚Ç¨",
            "Abonado al M√©dico": "{:,.2f} ‚Ç¨"
        }),
        use_container_width=True
    )

# -------------------- Gr√°fico comparativo --------------------
st.markdown("### üìä Comparaci√≥n entre m√©dicos")

df_melt = df_comp.melt(
    id_vars=["M√©dico", "Servicio"],
    value_vars=["Facturaci√≥n", "VITHAS", "OSA", "Abonado al M√©dico"],
    var_name="Concepto",
    value_name="Valor (‚Ç¨)"
)

fig = px.bar(
    df_melt,
    x="Servicio",
    y="Valor (‚Ç¨)",
    color="Concepto",
    barmode="group",
    facet_col="M√©dico",
    text_auto=".2s",
    title="Comparaci√≥n de distribuci√≥n por servicio y m√©dico"
)
fig.update_layout(yaxis_title="‚Ç¨", xaxis_title="Servicio")
st.plotly_chart(fig, use_container_width=True)

# -------------------- Conclusi√≥n --------------------
for medico_sel in medicos_sel:
    row = df_edit[df_edit["M√©dico"] == medico_sel].iloc[0]
    st.success(f"""
    üëâ **{medico_sel}** factur√≥ un total bruto de **{row['Total_Bruto']:,.2f} ‚Ç¨**.  
    - VITHAS se queda con su parte seg√∫n servicio.  
    - El pool OSA suma lo correspondiente.  
    - Finalmente, al m√©dico se le abon√≥ **{row['Abonado_a_Medico']:,.2f} ‚Ç¨**  
      (**{row['Pct_Abono']:.0%}** de su OSA disponible).
    """)
